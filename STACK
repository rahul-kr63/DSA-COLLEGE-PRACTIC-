#include <iostream>
using namespace std;

class node
{
public:
    int data;
    node *next;
   

    node(int value)
    {
        data = value;
        next = NULL;
        
    }
};
class stack
{
    node *top;
    int size;
    public:
    
    stack()
    {
    top=NULL;
    size=0;
    }
void push(int value)
{
    node *temp=new node(value)
    if(temp==NULL)
    {
     cout<<"stack overflow\n";
    }
    else{
    temp->next=top;
    top=temp;
    size++;
    }
    
};
void pop()
{
  if(top==NULL)
  {
    cout<<"stack underflow\n";
  }
};

void peek()
{
    if(top==NULL)
    {
    return -1; 
    }
    else
    {
      return top->data;
    }
};
bool IsEmpty()
{
    return top==NULL;
};

int main()
{
    stack s;
    s.push(7);
    s.push(7);
    s.pop(27);
    s.push(7);

}













#include<bits/stdc++.h>
using namespace std;

class stack
{
    int *arr;
    int size;
    int top;

    public:
    stack(int s)
    {
      size= s;
      top=-1;
      arr=new int[s];
    }
};

int *arr,top,size;
void push(int value)
{
   if(top==size-1)
   {
    cout<<"stack overflow\n";
   }
   else
   {
    top++;
    arr[top]=value;
   }
};

void pop()
{
    if (top==-1)
    {
        cout<<"stack underflow\n";
    }
    else
    {
        top--;  
    }
};

void peek()
{
     if(top==-1)
     {
        cout<<"stack is empty\n";
     }
     else
     {
       return arr[top];
     }
};

void size()
{
 return top==-1
};


int main()
{
  stack s(5);
   s.push(4);
   s.push(7);
   s.push(8);
   s.push(9);
   s.pop(88);
   s.pop(433);
}
     
};

void push(int value)
{
    node *temp=new node(value)
    if(temp==NULL)
    {
     cout<<"stack overflow\n";
    }
    else{
    temp->next=top;
    top=temp;
    size++;
    }
    
};
void pop()
{
  if(top==NULL)
  {
    cout<<"stack underflow\n";
  }
};

void peek()
{
    if(top==NULL)
    {
    return -1; 
    }
    else
    {
      return top->data;
    }
};
bool IsEmpty()
{
    return top==NULL;
};

int main()
{
    stack s;
    s.push(7);
    s.push(7);
    s.pop(27);
    s.push(7);

}

